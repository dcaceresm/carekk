extends layout

block content
    h1 Sala de Juego #{id}    
    p Jugando como 
        span#playerName

    h4 Lista de Jugadores
    ul#playerList

    .buttons
        button#initGameButton(onClick="initGame()" active="true") Iniciar Juego
        button#drawNplay(onClick="drawAndPlay()" active="true") Sacar del Mazo
        button#drawNplay(onClick="drawAndPlay()" active="true") Lanzar una carta

    .container        
        .gameContainer
            .gameWindow
                .cardPiles
                    .cardPile#mainDeck
                        span Mazo
                        span#mainDeckCount
                    .cardPile#discardPile
                        span Descarte
                        span#discardPileCount
                        span Carta Superior 
                        span#topCard
                    
            .currentPlayer
            .triplets
            .playerHand
                p Mi mano es:
                #hand



    script(src="/socket.io/socket.io.js")
    script.
        var socket = io('http://localhost:3000');
        socket.on('news', function (data) {
            socket.emit('roomConnection', { room: '#{id}' });
        });


        socket.on('updateGameData', (data) => {
            console.log("Updated Game Data from server")
            if(data.cardCount){
                $('#mainDeckCount').empty()    
                $('#mainDeckCount').text(data.cardCount)    
            }
            if(data.discardCount){

            }
            if(data.topCard){
                $('#topCard').empty()    
                $('#topCard').text(data.topCard)
            }
        })

        socket.on('updatePlayerData', (data) => {
            console.log("Updated Your Data from server")
            if(data.currentHand){
                $('#hand').empty()    
                console.log(data.currentHand)
                //$('#hand').text(data.currentHand)    
                data.currentHand.map(c => {
                    $('#hand').append('<button onClick="playCard(this)" v="'+c[0]+'" sym="'+c[1]+'">'+c[0]+" de <b>"+c[1]+"</b></button>")
                })
            }
        })

        socket.on('playerData', (data) => {
            $('#playerName').text(data.name)
        })

        socket.on('playerList', (data) => {
            $('#playerList').empty()
            data.players.map(name => $('#playerList').append('<li>'+name+'</li>') )            
        })



    script.
        const initGame = () => {
            socket.emit('startGame',{initPlayer: $('#playerName').text()})

        }

        const drawAndPlay = () => {
            socket.emit('drawAndPlay')
        }

        const playCard = (event) => {            
            let tuple = [parseInt(event.attributes.v.value), event.attributes.sym.value]
            socket.emit('playCard', {card : tuple})
        }
